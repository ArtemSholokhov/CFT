import java.nio.file.Paths

plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

configurations {
    aspectConfig
}

repositories {
    mavenCentral()
    mavenLocal()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'utf-8'
}

def adapterVersion = "1.6.0"

dependencies {
    def javaCommonsJar = System.getProperty("JAVA_COMMONS_JAR", "")
    def adapterJar = System.getProperty("ADAPTER_JAR", "")
    def selenideJar = System.getProperty("SELENIDE_JAR", "")

    if (javaCommonsJar == "") {
        testImplementation "ru.testit:testit-java-commons:$adapterVersion"
    }
    else
    {
        testImplementation files(javaCommonsJar)
    }

    if (adapterJar == "") {
        testImplementation "ru.testit:testit-adapter-junit5:$adapterVersion"
    }
    else
    {
        testImplementation files(adapterJar)
    }

    if (selenideJar == "") {
        testImplementation "ru.testit:testit-adapter-selenide:$adapterVersion"
    }
    else
    {
        testImplementation files(selenideJar)
    }
    
    testRuntimeOnly 'org.slf4j:slf4j-simple:2.0.6'
    testImplementation 'com.codeborne:selenide:6.19.1'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.2"
    testImplementation 'org.aspectj:aspectjrt:1.9.7'
    aspectConfig "org.aspectj:aspectjweaver:1.9.7"
}

test {
    useJUnitPlatform()
    doFirst {
        def weaver = configurations.aspectConfig.find { it.name.contains("aspectjweaver") }
        jvmArgs += "-javaagent:$weaver"
    }
}