defaultTasks 'clean', 'test', 'aggregate'

repositories {
    mavenLocal()
    mavenCentral()
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.4.24")
        classpath("net.serenity-bdd:serenity-single-page-report:2.4.24")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
    options.encoding = "utf-8"
}

serenity {
    reports = ["single-page-html"]
}

def adapterVersion = "[0,)"
def serenityVersion = "2.6.0"
def slf4jVersion = "1.7.36"

dependencies {
    testImplementation "ru.testit:testit-java-commons:$adapterVersion"
    testImplementation "ru.testit:testit-adapter-cucumber6:${adapterVersion}"
    testImplementation "org.slf4j:slf4j-api:${slf4jVersion}"
    testImplementation "org.slf4j:slf4j-simple:${slf4jVersion}"
    testImplementation "net.serenity-bdd:serenity-cucumber6:${serenityVersion}"
    testImplementation "net.serenity-bdd:serenity-screenplay:${serenityVersion}"
    testImplementation "net.serenity-bdd:serenity-screenplay-rest:${serenityVersion}"
    testImplementation "junit:junit:4.13.1"
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    testLogging {
        events = [ "failed", "skipped", "passed" ]
        showCauses = false
        showStackTraces = false
        showStandardStreams = true
    }

    environment 'TMS_URL', System.getProperty('tmsUrl')
    environment 'TMS_PRIVATE_TOKEN', System.getProperty('tmsPrivateToken')
    environment 'TMS_PROJECT_ID', System.getProperty('tmsProjectId')
    environment 'TMS_CONFIGURATION_ID', System.getProperty('tmsConfigurationId')
    environment 'TMS_TEST_RUN_ID', System.getProperty('tmsTestRunId')
    environment 'TMS_TEST_RUN_NAME', System.getProperty('tmsTestRunName')
    environment 'TMS_ADAPTER_MODE', System.getProperty('tmsAdapterMode')
    environment 'TMS_CERT_VALIDATION', System.getProperty('tmsCertValidation')
    environment 'TMS_TEST_IT', System.getProperty('testIt')
    environment 'TMS_AUTOMATIC_CREATION_TEST_CASES', System.getProperty('tmsAutomaticCreationTestCases')
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)